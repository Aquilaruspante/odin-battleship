{"version":3,"file":"main.js","mappingslXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACblcrIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxBA;AACA;;;;;;;;;;;;;;ACDA;AACA;AACA;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AChWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACrBA;;;;;AEAA;AACA;AACA;AACA","sources":["webpack://odin-battleship/./src/styles.css","webpack://odin-battleship/./node_modules/css-loader/dist/runtime/api.js","webpack://odin-battleship/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://odin-battleship/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://odin-battleship/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://odin-battleship/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://odin-battleship/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://odin-battleship/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://odin-battleship/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://odin-battleship/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://odin-battleship/./src/components/gameBoard.js","webpack://odin-battleship/./src/controllers/aiController.js","webpack://odin-battleship/./src/controllers/eventListeners.js","webpack://odin-battleship/./src/controllers/gameController.js","webpack://odin-battleship/./src/controllers/shootNode.js","webpack://odin-battleship/./src/controllers/shootPlot.js","webpack://odin-battleship/./src/index.js","webpack://odin-battleship/./src/models/player.js","webpack://odin-battleship/./src/models/ship.js","webpack://odin-battleship/./src/styles.css?44b2","webpack://odin-battleship/./src/utils/eventBus.js","webpack://odin-battleship/./src/utils/switchModality.js","webpack://odin-battleship/./src/views/DOMElements.js","webpack://odin-battleship/./src/views/DOMManager.js","webpack://odin-battleship/webpack/bootstrap","webpack://odin-battleship/webpack/runtime/compat get default export","webpack://odin-battleship/webpack/runtime/define property getters","webpack://odin-battleship/webpack/runtime/global","webpack://odin-battleship/webpack/runtime/hasOwnProperty shorthand","webpack://odin-battleship/webpack/runtime/make namespace object","webpack://odin-battleship/webpack/runtime/publicPath","webpack://odin-battleship/webpack/runtime/jsonp chunk loading","webpack://odin-battleship/webpack/runtime/nonce","webpack://odin-battleship/webpack/before-startup","webpack://odin-battleship/webpack/startup","webpack://odin-battleship/webpack/after-startup"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"./assets/images/battleship.webp\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\n\n* {\n    box-sizing: border-box;\n}\n\n\n.share-tech-mono-regular {\n\tfont-family: \"Share Tech Mono\", monospace;\n\tfont-weight: 400;\n\tfont-style: normal;\n  }\n  \n\n  \nhtml {\n\tmargin: 0;\n\tpadding: 0;\n\theight: 100%;\n\n\t--test:\trgb(179, 181, 178, 0.8);\n\t--test-trans : rgb(179, 181, 178, 0.5);\n\t--test-background: rgb(179, 181, 178, 0.3);\n\n\t--cell-border: rgb(46, 46, 46);\n\n\t--border-color: rgb(46, 46, 46, 0.8); \n\n\tcolor: rgb(46, 46, 46);\n}\n\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\nbody {\n\theight: 100vh;\n\tposition: relative; /* necessario per il posizionamento assoluto figlio */\n\toverflow: hidden;\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.ship {\n\tbackground-color: #6d757a;\n\tborder: 1px solid #2e2e2e;\n\tbox-shadow: inset 0 0 3px #000000aa;\n}\n\nmain {\n    display: flex;\n\tjustify-content: space-between;\n    margin: auto;\n\theight: 60%;\n\twidth: 90%;\n}\n\n.gameboard {\n\tbox-sizing: border-box;\n    width: 500px;\n\theight: 500px;\n\tborder: 3px solid var(--border-color);\n\tbackground-color: var(--test);\n}\n\n.row {\n\twidth: 100%;\n\theight: 10%;\n\tdisplay: flex;\n}\n\n.col {\n    width: 50px;\n    height: 100%;\n\tborder: 1px solid var(--cell-border);\n\tbox-sizing: border-box;\n}\n\n#game-over-dialog:not([open]) {\n\tdisplay: none;\n}\n\n#timeout-dialog:not([open]) {\n\tdisplay: none;\n}\n\n#initial-dialog:not([open]) {\n\tdisplay: none;\n}\n\n#game-over-dialog, #timeout-dialog {\n\twidth: 20%;\n\theight: 30%;\n\ttext-align: center;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-around;\n\tpadding: 10px;\n\tbackground-color: var(--test);\n}\n\n#initial-dialog {\n\twidth: 20%;\n\theight: 30%;\n\tbackground-color: var(--test);\n}\n\n#game-over-dialog h3 {\n\tfont-size: 1.6rem;\n\tfont-weight: 800;\n}\n\n#game-over-dialog p {\n\tfont-size: 1.4rem;\n}\n\ndialog::backdrop {\n\tbackground: url(${___CSS_LOADER_URL_REPLACEMENT_0___}) center center / cover no-repeat;\n  }\n  \n\n#play-again-button {\n\twidth: 70%;\n\tmargin-left: 15%;\n}\n\n#header {\n\twidth: 20%;\n\theight: 20%;\n\tmargin: auto;\n\ttext-align: center;\n\tmargin-bottom: 20px;\n}\n\n#turn-board {\n\theight: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-around;\n\tbackground-color: var(--test-trans);\n\tborder: 2px solid var(--border-color);\n}\n\n#turn-board h3 {\n\tfont-size: 1.6rem;\n\tfont-weight: 800;\n}\n\n#turn-board p {\n\tfont-size: 2rem;\n}\n\n#timeout-dialog {\n\talign-items: center;\n}\n\n#timeout-dialog h3 {\n\tfont-size: 1.4rem;\n}\n\n#counter {\n\tbackground-color: grey;\n\twidth: 50px;\n\tfont-size: 2rem;\n\tborder-radius: 50%;\n}\n\n#choose-player-names {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n}\n\n.name-element {\n\tdisplay: flex;\n\tjustify-content: space-between;\n}\n\n#background-image {\n    position: fixed; /* meglio di absolute per i background */\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    object-fit: cover;\n    z-index: -1;\n    display: block; /* evita problemi da comportamento inline */\n}\n\n\n#game {\n\tz-index: 1;\n\tbackground-color: var(--test-background);\n\theight: 100%;\n\tpadding-top: 20px;\n}\n\n.first-row, .second-row {\n\twidth: 100%;\n\theight: 50%;\n\tdisplay: flex;\n\tjustify-content: space-around;\n}\n  \n.fleet-manager {\n\twidth: 15%;\n\theight: 60%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\tbackground-color: var(--test-trans);\n\tborder: 2px solid var(--border-color);\n\tpadding: 10px;\n}\n\n.ship-container {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.ship-on-board {\n\tbackground-color: #6d757a;\n\tborder: 1px solid #2e2e2e;\n\tbox-shadow: inset 0 0 3px #000000aa;\n\theight: 30px;\n\twidth: 30px;\n}\n\n.ships {\n\tdisplay: flex;\n\tjustify-content: space-around;\n\theight: 60%;\n}\n\n.row-orientation {\n\tflex-direction: row;\n}\n\n.column-orientation {\n\tflex-direction: column;\n}\n\n.container-row {\n\tflex-direction: row;\n}\n\n.container-column {\n\tflex-direction: column;\n}\n\n.buttons {\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n}\n\n.buttons button {\n\tbackground-color: rgb(55, 83, 104);\n\tcolor: rgb(189, 193, 196);\n\tborder: none;\n\theight: 24px;\n\tborder-radius: 5px;\n}\n\n.buttons button:hover {\n\tbackground-color: rgb(83, 126, 158);\n\tbox-shadow: 2px 2px rgba(98, 100, 97, 0.5);\n\tcursor: pointer;\n}\n\n.buttons button:active {\n\tbackground-color: rgb(55, 83, 104);\n}\n\n.hit {\n\tbackground-color: rgb(122, 63, 44);\n}\n\n.miss {\n\tbackground-color: rgb(55, 83, 104);\n}\n\n#initial-form {\n\ttext-align: center;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-around;\n\tpadding: 10px;\n\tbackground-color: rgb(0, 0, 0, 0);\n\theight: 100%;\n}\n\nbutton:disabled, button[disabled] {\n\tbackground-color: #6d757a;\n}\n\nbutton:disabled:hover {\n\tbackground-color: #6d757a;\n\tbox-shadow: none;\n\tcursor: auto;\n}\n\ninput {\n\twidth: 60%;\n}\n\n#choose-player-names {\n\theight: 23%;\n}\n\n.menu {\n\tdisplay: flex;\n\tmargin-top: 10px;\n}\n\nfieldset {\n\tpadding: 5px;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;;AAEA;IACI,sBAAsB;AAC1B;;;AAGA;CACC,yCAAyC;CACzC,gBAAgB;CAChB,kBAAkB;EACjB;;;;AAIF;CACC,SAAS;CACT,UAAU;CACV,YAAY;;CAEZ,+BAA+B;CAC/B,sCAAsC;CACtC,0CAA0C;;CAE1C,8BAA8B;;CAE9B,oCAAoC;;CAEpC,sBAAsB;AACvB;;AAEA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;AAEA;CACC,aAAa;CACb,kBAAkB,EAAE,qDAAqD;CACzE,gBAAgB;CAChB,SAAS;CACT,UAAU;AACX;;AAEA;CACC,yBAAyB;CACzB,yBAAyB;CACzB,mCAAmC;AACpC;;AAEA;IACI,aAAa;CAChB,8BAA8B;IAC3B,YAAY;CACf,WAAW;CACX,UAAU;AACX;;AAEA;CACC,sBAAsB;IACnB,YAAY;CACf,aAAa;CACb,qCAAqC;CACrC,6BAA6B;AAC9B;;AAEA;CACC,WAAW;CACX,WAAW;CACX,aAAa;AACd;;AAEA;IACI,WAAW;IACX,YAAY;CACf,oCAAoC;CACpC,sBAAsB;AACvB;;AAEA;CACC,aAAa;AACd;;AAEA;CACC,aAAa;AACd;;AAEA;CACC,aAAa;AACd;;AAEA;CACC,UAAU;CACV,WAAW;CACX,kBAAkB;CAClB,aAAa;CACb,sBAAsB;CACtB,6BAA6B;CAC7B,aAAa;CACb,6BAA6B;AAC9B;;AAEA;CACC,UAAU;CACV,WAAW;CACX,6BAA6B;AAC9B;;AAEA;CACC,iBAAiB;CACjB,gBAAgB;AACjB;;AAEA;CACC,iBAAiB;AAClB;;AAEA;CACC,mFAAkF;EACjF;;;AAGF;CACC,UAAU;CACV,gBAAgB;AACjB;;AAEA;CACC,UAAU;CACV,WAAW;CACX,YAAY;CACZ,kBAAkB;CAClB,mBAAmB;AACpB;;AAEA;CACC,YAAY;CACZ,aAAa;CACb,sBAAsB;CACtB,6BAA6B;CAC7B,mCAAmC;CACnC,qCAAqC;AACtC;;AAEA;CACC,iBAAiB;CACjB,gBAAgB;AACjB;;AAEA;CACC,eAAe;AAChB;;AAEA;CACC,mBAAmB;AACpB;;AAEA;CACC,iBAAiB;AAClB;;AAEA;CACC,sBAAsB;CACtB,WAAW;CACX,eAAe;CACf,kBAAkB;AACnB;;AAEA;CACC,aAAa;CACb,sBAAsB;CACtB,8BAA8B;AAC/B;;AAEA;CACC,aAAa;CACb,8BAA8B;AAC/B;;AAEA;IACI,eAAe,EAAE,wCAAwC;IACzD,MAAM;IACN,OAAO;IACP,YAAY;IACZ,aAAa;IACb,iBAAiB;IACjB,WAAW;IACX,cAAc,EAAE,2CAA2C;AAC/D;;;AAGA;CACC,UAAU;CACV,wCAAwC;CACxC,YAAY;CACZ,iBAAiB;AAClB;;AAEA;CACC,WAAW;CACX,WAAW;CACX,aAAa;CACb,6BAA6B;AAC9B;;AAEA;CACC,UAAU;CACV,WAAW;CACX,aAAa;CACb,sBAAsB;CACtB,8BAA8B;CAC9B,mCAAmC;CACnC,qCAAqC;CACrC,aAAa;AACd;;AAEA;CACC,aAAa;CACb,sBAAsB;AACvB;;AAEA;CACC,yBAAyB;CACzB,yBAAyB;CACzB,mCAAmC;CACnC,YAAY;CACZ,WAAW;AACZ;;AAEA;CACC,aAAa;CACb,6BAA6B;CAC7B,WAAW;AACZ;;AAEA;CACC,mBAAmB;AACpB;;AAEA;CACC,sBAAsB;AACvB;;AAEA;CACC,mBAAmB;AACpB;;AAEA;CACC,sBAAsB;AACvB;;AAEA;CACC,aAAa;CACb,6BAA6B;AAC9B;;AAEA;CACC,kCAAkC;CAClC,yBAAyB;CACzB,YAAY;CACZ,YAAY;CACZ,kBAAkB;AACnB;;AAEA;CACC,mCAAmC;CACnC,0CAA0C;CAC1C,eAAe;AAChB;;AAEA;CACC,kCAAkC;AACnC;;AAEA;CACC,kCAAkC;AACnC;;AAEA;CACC,kCAAkC;AACnC;;AAEA;CACC,kBAAkB;CAClB,aAAa;CACb,sBAAsB;CACtB,6BAA6B;CAC7B,aAAa;CACb,iCAAiC;CACjC,YAAY;AACb;;AAEA;CACC,yBAAyB;AAC1B;;AAEA;CACC,yBAAyB;CACzB,gBAAgB;CAChB,YAAY;AACb;;AAEA;CACC,UAAU;AACX;;AAEA;CACC,WAAW;AACZ;;AAEA;CACC,aAAa;CACb,gBAAgB;AACjB;;AAEA;CACC,YAAY;AACb\",\"sourcesContent\":[\"/* http://meyerweb.com/eric/tools/css/reset/ \\n   v2.0 | 20110126\\n   License: none (public domain)\\n*/\\n\\nhtml, body, div, span, applet, object, iframe,\\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\\na, abbr, acronym, address, big, cite, code,\\ndel, dfn, em, img, ins, kbd, q, s, samp,\\nsmall, strike, strong, sub, sup, tt, var,\\nb, u, i, center,\\ndl, dt, dd, ol, ul, li,\\nfieldset, form, label, legend,\\ntable, caption, tbody, tfoot, thead, tr, th, td,\\narticle, aside, canvas, details, embed, \\nfigure, figcaption, footer, header, hgroup, \\nmenu, nav, output, ruby, section, summary,\\ntime, mark, audio, video {\\n\\tmargin: 0;\\n\\tpadding: 0;\\n\\tborder: 0;\\n\\tfont-size: 100%;\\n\\tfont: inherit;\\n\\tvertical-align: baseline;\\n}\\n/* HTML5 display-role reset for older browsers */\\narticle, aside, details, figcaption, figure, \\nfooter, header, hgroup, menu, nav, section {\\n\\tdisplay: block;\\n}\\n\\n* {\\n    box-sizing: border-box;\\n}\\n\\n\\n.share-tech-mono-regular {\\n\\tfont-family: \\\"Share Tech Mono\\\", monospace;\\n\\tfont-weight: 400;\\n\\tfont-style: normal;\\n  }\\n  \\n\\n  \\nhtml {\\n\\tmargin: 0;\\n\\tpadding: 0;\\n\\theight: 100%;\\n\\n\\t--test:\\trgb(179, 181, 178, 0.8);\\n\\t--test-trans : rgb(179, 181, 178, 0.5);\\n\\t--test-background: rgb(179, 181, 178, 0.3);\\n\\n\\t--cell-border: rgb(46, 46, 46);\\n\\n\\t--border-color: rgb(46, 46, 46, 0.8); \\n\\n\\tcolor: rgb(46, 46, 46);\\n}\\n\\nbody {\\n\\tline-height: 1;\\n}\\nol, ul {\\n\\tlist-style: none;\\n}\\nblockquote, q {\\n\\tquotes: none;\\n}\\nblockquote:before, blockquote:after,\\nq:before, q:after {\\n\\tcontent: '';\\n\\tcontent: none;\\n}\\ntable {\\n\\tborder-collapse: collapse;\\n\\tborder-spacing: 0;\\n}\\n\\nbody {\\n\\theight: 100vh;\\n\\tposition: relative; /* necessario per il posizionamento assoluto figlio */\\n\\toverflow: hidden;\\n\\tmargin: 0;\\n\\tpadding: 0;\\n}\\n\\n.ship {\\n\\tbackground-color: #6d757a;\\n\\tborder: 1px solid #2e2e2e;\\n\\tbox-shadow: inset 0 0 3px #000000aa;\\n}\\n\\nmain {\\n    display: flex;\\n\\tjustify-content: space-between;\\n    margin: auto;\\n\\theight: 60%;\\n\\twidth: 90%;\\n}\\n\\n.gameboard {\\n\\tbox-sizing: border-box;\\n    width: 500px;\\n\\theight: 500px;\\n\\tborder: 3px solid var(--border-color);\\n\\tbackground-color: var(--test);\\n}\\n\\n.row {\\n\\twidth: 100%;\\n\\theight: 10%;\\n\\tdisplay: flex;\\n}\\n\\n.col {\\n    width: 50px;\\n    height: 100%;\\n\\tborder: 1px solid var(--cell-border);\\n\\tbox-sizing: border-box;\\n}\\n\\n#game-over-dialog:not([open]) {\\n\\tdisplay: none;\\n}\\n\\n#timeout-dialog:not([open]) {\\n\\tdisplay: none;\\n}\\n\\n#initial-dialog:not([open]) {\\n\\tdisplay: none;\\n}\\n\\n#game-over-dialog, #timeout-dialog {\\n\\twidth: 20%;\\n\\theight: 30%;\\n\\ttext-align: center;\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tjustify-content: space-around;\\n\\tpadding: 10px;\\n\\tbackground-color: var(--test);\\n}\\n\\n#initial-dialog {\\n\\twidth: 20%;\\n\\theight: 30%;\\n\\tbackground-color: var(--test);\\n}\\n\\n#game-over-dialog h3 {\\n\\tfont-size: 1.6rem;\\n\\tfont-weight: 800;\\n}\\n\\n#game-over-dialog p {\\n\\tfont-size: 1.4rem;\\n}\\n\\ndialog::backdrop {\\n\\tbackground: url('./assets/images/battleship.webp') center center / cover no-repeat;\\n  }\\n  \\n\\n#play-again-button {\\n\\twidth: 70%;\\n\\tmargin-left: 15%;\\n}\\n\\n#header {\\n\\twidth: 20%;\\n\\theight: 20%;\\n\\tmargin: auto;\\n\\ttext-align: center;\\n\\tmargin-bottom: 20px;\\n}\\n\\n#turn-board {\\n\\theight: 100%;\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tjustify-content: space-around;\\n\\tbackground-color: var(--test-trans);\\n\\tborder: 2px solid var(--border-color);\\n}\\n\\n#turn-board h3 {\\n\\tfont-size: 1.6rem;\\n\\tfont-weight: 800;\\n}\\n\\n#turn-board p {\\n\\tfont-size: 2rem;\\n}\\n\\n#timeout-dialog {\\n\\talign-items: center;\\n}\\n\\n#timeout-dialog h3 {\\n\\tfont-size: 1.4rem;\\n}\\n\\n#counter {\\n\\tbackground-color: grey;\\n\\twidth: 50px;\\n\\tfont-size: 2rem;\\n\\tborder-radius: 50%;\\n}\\n\\n#choose-player-names {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tjustify-content: space-between;\\n}\\n\\n.name-element {\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n}\\n\\n#background-image {\\n    position: fixed; /* meglio di absolute per i background */\\n    top: 0;\\n    left: 0;\\n    width: 100vw;\\n    height: 100vh;\\n    object-fit: cover;\\n    z-index: -1;\\n    display: block; /* evita problemi da comportamento inline */\\n}\\n\\n\\n#game {\\n\\tz-index: 1;\\n\\tbackground-color: var(--test-background);\\n\\theight: 100%;\\n\\tpadding-top: 20px;\\n}\\n\\n.first-row, .second-row {\\n\\twidth: 100%;\\n\\theight: 50%;\\n\\tdisplay: flex;\\n\\tjustify-content: space-around;\\n}\\n  \\n.fleet-manager {\\n\\twidth: 15%;\\n\\theight: 60%;\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tjustify-content: space-between;\\n\\tbackground-color: var(--test-trans);\\n\\tborder: 2px solid var(--border-color);\\n\\tpadding: 10px;\\n}\\n\\n.ship-container {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n}\\n\\n.ship-on-board {\\n\\tbackground-color: #6d757a;\\n\\tborder: 1px solid #2e2e2e;\\n\\tbox-shadow: inset 0 0 3px #000000aa;\\n\\theight: 30px;\\n\\twidth: 30px;\\n}\\n\\n.ships {\\n\\tdisplay: flex;\\n\\tjustify-content: space-around;\\n\\theight: 60%;\\n}\\n\\n.row-orientation {\\n\\tflex-direction: row;\\n}\\n\\n.column-orientation {\\n\\tflex-direction: column;\\n}\\n\\n.container-row {\\n\\tflex-direction: row;\\n}\\n\\n.container-column {\\n\\tflex-direction: column;\\n}\\n\\n.buttons {\\n\\tdisplay: flex;\\n\\tjustify-content: space-evenly;\\n}\\n\\n.buttons button {\\n\\tbackground-color: rgb(55, 83, 104);\\n\\tcolor: rgb(189, 193, 196);\\n\\tborder: none;\\n\\theight: 24px;\\n\\tborder-radius: 5px;\\n}\\n\\n.buttons button:hover {\\n\\tbackground-color: rgb(83, 126, 158);\\n\\tbox-shadow: 2px 2px rgba(98, 100, 97, 0.5);\\n\\tcursor: pointer;\\n}\\n\\n.buttons button:active {\\n\\tbackground-color: rgb(55, 83, 104);\\n}\\n\\n.hit {\\n\\tbackground-color: rgb(122, 63, 44);\\n}\\n\\n.miss {\\n\\tbackground-color: rgb(55, 83, 104);\\n}\\n\\n#initial-form {\\n\\ttext-align: center;\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tjustify-content: space-around;\\n\\tpadding: 10px;\\n\\tbackground-color: rgb(0, 0, 0, 0);\\n\\theight: 100%;\\n}\\n\\nbutton:disabled, button[disabled] {\\n\\tbackground-color: #6d757a;\\n}\\n\\nbutton:disabled:hover {\\n\\tbackground-color: #6d757a;\\n\\tbox-shadow: none;\\n\\tcursor: auto;\\n}\\n\\ninput {\\n\\twidth: 60%;\\n}\\n\\n#choose-player-names {\\n\\theight: 23%;\\n}\\n\\n.menu {\\n\\tdisplay: flex;\\n\\tmargin-top: 10px;\\n}\\n\\nfieldset {\\n\\tpadding: 5px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","import Ship from '../models/ship.js';\nimport eventBus from '../utils/eventBus.js';\n\nexport default class GameBoard {\n    constructor() {\n        this.resetBoard();\n        this.destroyer = new Ship(2, 'D');\n        this.cruiser = new Ship(3, 'C');\n        this.submarine = new Ship(3, 'S');\n        this.battleship = new Ship(4, 'B');\n        this.carrier = new Ship(5, 'A');\n\n        this.shipArray = [this.destroyer, this.cruiser, this.submarine, this.battleship, this.carrier];\n    };\n\n    #dispatchIsSunkEvent() {\n        for (let ship of this.shipArray) {\n            if (ship.isSunk()) eventBus.dispatchEvent(new CustomEvent('isSunk', { detail: { ship }}));\n        };  \n    };\n\n    #shipContainedHorizotally(ship, col) {\n        if (col + ship.length - 1 >= 10){\n            return false;\n        } else {\n            return true;\n        };\n    };\n\n    #shipDoesNotOverlapOtherShipsHorizontally(ship, row, col) {\n        for (let i = 0; i < ship.length; i++) {\n            if (this.grid[row][col + i] !== null) {\n                return false\n            }; \n        } ;\n        return true;\n    };\n\n    #shipContainedVertically(ship, row) {\n        if (row + ship.length - 1 >= 10) {\n            return false;\n        } else {\n            return true;\n        };\n    };\n\n    #shipDoesNotOverlapOthersShipsVertically(ship, row, col) {\n        for (let i = 0; i < ship.length; i++) {\n            if (this.grid[row + i][col] !== null) {\n                return false\n            }; \n        };\n        return true;\n    };\n\n    #shipIsPlaceableHorizontally(ship, row , col) {\n       if (this.#shipContainedHorizotally(ship, col) && this.#shipDoesNotOverlapOtherShipsHorizontally(ship, row, col)) {\n        return true;\n       } else {\n        return false;\n       };\n    };\n\n    #shipIsPlaceablevertically(ship, row , col) {\n        if (this.#shipContainedVertically(ship, row) && this.#shipDoesNotOverlapOthersShipsVertically(ship, row, col)) {\n            return true;\n        } else {\n            return false;\n        };\n    };\n    \n    place(ship, coordinates, orientation) {\n        const [row, col] = coordinates;\n\n        if (row > 10 || col > 10) throw new Error('coordinates must be 2 numbers less than 10');\n\n        if (orientation === 'horizontal' && this.#shipIsPlaceableHorizontally(ship, row, col)) {\n            for (let i = 0; i < ship.length; i++) {\n                this.grid[row][col + i] = ship.symbol;\n            };        \n            ship.isPlaced = true;\n            eventBus.dispatchEvent(new CustomEvent('shipPlaced', { detail: { ship }}));\n        } else if (orientation === 'vertical' && this.#shipIsPlaceablevertically(ship, row, col)) {      \n            for (let i = 0; i < ship.length; i++) {    \n                this.grid[row + i][col] = ship.symbol;\n            };\n            \n            ship.isPlaced = true;\n            eventBus.dispatchEvent(new CustomEvent('shipPlaced', { detail: { ship }}));\n        } else {\n            ship.isPlaced = false;\n        };\n    };\n\n    receiveAttack(coordinates) {\n        const [row, col] = coordinates;\n\n        if (row >= 10 || col >= 10) throw new Error('receiveAttack coordinates must be less than 10!');\n\n        if (this.grid[row][col] === 'X' || this.grid[row][col] === 'M') {\n            return { result: 'alreadyHit', coordinates: [row, col] };\n        } else if (this.grid[row][col] === null) {\n            this.grid[row][col] = 'M'; \n            return { result: 'miss', coordinates: [row, col] };\n        } else {\n            this.checkWhichShipHit(coordinates);\n            return { result: 'hit', coordinates: [row, col] };\n        };\n\n        this.#dispatchIsSunkEvent();\n    };\n\n    checkWhichShipHit(coordinates) {\n        const [row, col] = coordinates;\n\n        switch (this.grid[row][col]) {\n            case 'D':\n                this.destroyer.hit();\n                break;\n            case 'C':\n                this.cruiser.hit();\n                break;\n            case 'S':\n                this.submarine.hit();\n                break;\n            case 'B':\n                this.battleship.hit();\n                break;\n            case 'A':\n                this.carrier.hit();\n                break;\n        };\n\n        this.grid[row][col] = 'X';\n    };\n\n    allShipsSunk() {\n        if (!this.destroyer.sinkable && !this.cruiser.sinkable && !this.submarine.sinkable && !this.battleship.sinkable && !this.carrier.sinkable) {\n            return true;\n        } else {\n            return false;\n        };\n    };\n\n    resetBoard() {\n        this.grid = [\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null, null, null],\n        ];\n    };\n\n    allShipsPlaced() {\n        return (this.destroyer.isPlaced && this.cruiser.isPlaced && this.submarine.isPlaced && this.battleship.isPlaced && this.carrier.isPlaced);\n    };\n\n    unplaceAllShips() {\n        this.carrier.isPlaced = false;\n        this.battleship.isPlaced = false;\n        this.cruiser.isPlaced = false;\n        this.submarine.isPlaced = false;\n        this.destroyer.isPlaced = false;\n    };\n};","import ShootNode from \"./shootNode.js\";\nimport ShootPlot from \"./shootPlot.js\";\n\nexport default class AIController {\n    constructor (controller) {\n        this.controller = controller;\n        this.originExists = false;\n        this.firstOrigin = null;\n        this.plotter = new ShootPlot();\n        this.path = null;\n        this.northPossible = true;\n        this.eastPossible = true;\n        this.southPossible = true;\n        this.westPossible = true;\n    };\n\n    getAttackFeedback(result, coordinates) {\n        if (result === 'hit' && !this.originExists) {\n            if (!this.firstOrigin) this.firstOrigin = coordinates;\n            this.plotter.getOrigin(coordinates);\n            this.originExists = true;\n        } else if (result === 'miss' || result === 'alreadyHit') {\n            this.#breakPath();\n            this.firstOrigin ? this.plotter.getOrigin(this.firstOrigin) : this.originExists = false;\n            this.path = null;\n        };\n    };\n\n    #breakPath() {\n        switch (this.path) {\n            case 'north':\n                this.northPossible = false;\n                this.path = null;\n                break;\n            case 'east':\n                this.eastPossible = false;\n                this.path = null;\n                break;\n            case 'south':\n                this.southPossible = false;\n                this.path = null;\n                break;\n            case 'west':\n                this.westPossible = false;\n                this.path = null;\n                break;\n        }\n    }\n\n    #checkFirstOriginDepleted() {\n        if (!this.northPossible && !this.eastPossible && !this.southPossible && !this.westPossible) {\n            this.firstOrigin = null;\n            this.northPossible = true;\n            this.eastPossible = true;\n            this.southPossible = true;\n            this.westPossible = true;\n        }\n    }\n\n    attack() {\n        this.#checkFirstOriginDepleted();\n\n        let x;\n        let y;\n\n        if (!this.firstOrigin) {\n            x = Math.floor(Math.random() * 10);\n            y = Math.floor(Math.random() * 10);\n            this.controller.attackOnPlayerOne([x, y]);\n        } else if (!this.path) {\n            const index = Math.floor(Math.random() * 4);\n            switch (index) {\n                case 0:\n                    if (this.plotter.north) {\n                        if (this.northPossible) this.path = 'north';\n                        x = this.plotter.north[1];\n                        y = this.plotter.north[0];\n                        this.plotter.getOrigin([x, y]);\n                        this.controller.attackOnPlayerOne([x, y]);\n                    } else {\n                        this.northPossible = false;\n                        this.path = null;\n                        this.attack()\n                    };\n                    break;\n                case 1:\n                    if (this.plotter.east) {\n                        if (this.eastPossible) this.path = 'east';\n                        x = this.plotter.east[1];\n                        y = this.plotter.east[0];\n                        this.plotter.getOrigin([x, y]);\n                        this.controller.attackOnPlayerOne([x, y]);\n                    } else {\n                        this.eastPossible = false;\n                        this.path = null;\n                        this.attack()\n                    };\n                    break;\n                case 2:\n                    if (this.plotter.south) {\n                        if (this.southPossible) this.path = 'south';\n                        x = this.plotter.south[1];\n                        y = this.plotter.south[0];\n                        this.plotter.getOrigin([x, y]);\n                        this.controller.attackOnPlayerOne([x, y]);\n                    } else {\n                        this.southPossible = false;\n                        this.path = null;\n                        this.attack()\n                    };\n                    break;\n                case 3:\n                    if (this.plotter.west) {\n                        if (this.westPossible) this.path = 'west';\n                        x = this.plotter.west[1];\n                        y = this.plotter.west[0];\n                        this.plotter.getOrigin([x, y]);\n                        this.controller.attackOnPlayerOne([x, y]);\n                    } else {\n                        this.westPossible = false;\n                        this.path = null;\n                        this.attack()\n                    };\n                    break;\n            };\n        } else {\n            switch (this.path) {\n                case 'north':\n                    if (this.plotter.north && this.northPossible) {\n                        x = this.plotter.north[1];\n                        y = this.plotter.north[0];\n                        this.plotter.getOrigin([x, y]);\n                        this.controller.attackOnPlayerOne([x, y]);\n                    } else {\n                        this.northPossible = false;\n                        this.path = null;\n                        this.attack();\n                    };\n                    break;\n                case 'east':\n                    if (this.plotter.east && this.eastPossible) {\n                        x = this.plotter.east[1];\n                        y = this.plotter.east[0];\n                        this.plotter.getOrigin([x, y]);\n                        this.controller.attackOnPlayerOne([x, y]);\n                    } else {\n                        this.eastPossible = false;\n                        this.path = null;\n                        this.attack();\n                    };\n                    break;\n                case 'south':\n                    if (this.plotter.south && this.southPossible) {\n                        x = this.plotter.south[1];\n                        y = this.plotter.south[0];\n                        this.plotter.getOrigin([x, y]);\n                        this.controller.attackOnPlayerOne([x, y]);\n                    } else {\n                        this.southPossible = false;\n                        this.path = null;\n                        this.attack();\n                    };\n                    break;\n                case 'west':\n                    if (this.plotter.west && this.westPossible) {\n                        x = this.plotter.west[1];\n                        y = this.plotter.west[0];\n                        this.plotter.getOrigin([x, y]);\n                        this.controller.attackOnPlayerOne([x, y]);\n                    } else {\n                        this.westPossible = false;\n                        this.path = null;\n                        this.attack();\n                    };\n                    break;\n            };\n        };\n    };\n};","import eventBus from \"../utils/eventBus.js\";\nimport isModalityHumanVsHuman from \"../utils/switchModality.js\";\nimport { elements } from \"../views/DOMElements.js\";\nimport { controller, createController } from \"../index.js\";\n\nexport function dispatchGridComposed(controller) {\n    eventBus.dispatchEvent(new CustomEvent('gridComposed', { \n            detail: {\n                gridOne: controller.playerOne.gameBoard.grid,\n                gridTwo: controller.playerTwo.gameBoard.grid,\n            }\n        }));\n}\n\nexport default function setEventListeners(domManager) {\n    eventBus.addEventListener('attackResult', (e) => {\n        const { receiver, result, coordinates } = e.detail;\n        domManager.renderHit(receiver, result, coordinates);\n\n        if (controller.activePlayer === controller.playerTwo && !isModalityHumanVsHuman(controller)) {\n            controller.aiController.getAttackFeedback(result, coordinates);\n        }\n    });\n\n    eventBus.addEventListener('isSunk', (e) => {\n        controller.aiController.firstOrigin = null;\n        controller.aiController.northPossible = true;\n        controller.aiController.eastPossible = true;\n        controller.aiController.southPossible = true;\n        controller.aiController.westPossible = true;\n    })\n\n    eventBus.addEventListener('switchPlayer', (e) => {\n        if (isModalityHumanVsHuman(controller)) {\n            setTimeout(() => {\n                domManager.renderTimeOut(e.detail.activePlayer.name);\n                if (e.detail.activePlayer === controller.playerOne) {\n                    domManager.showCells(elements.boardOne);\n                    domManager.hideCellsValues(elements.boardTwo);\n                } else if (e.detail.activePlayer === controller.playerTwo) {\n                    domManager.showCells(elements.boardTwo);\n                    domManager.hideCellsValues(elements.boardOne);\n                }\n            }, 500);\n        } else {\n            domManager.showCells(elements.boardOne);\n            \n            if (controller.activePlayer === controller.playerTwo) {\n                setTimeout(() => {\n                    controller.aiController.attack();\n                }, 800);\n            };\n        };\n        domManager.updateTurnBoard(e.detail.activePlayer);\n    });\n\n    eventBus.addEventListener('initBoard', (e) => {\n        if (isModalityHumanVsHuman(controller)) {\n            if (e.detail.placingPlayer) {\n                e.detail.placingPlayer === 'playerOne' ? domManager.showCells(elements.boardOne) : domManager.showCells(elements.boardTwo);\n            };\n        } else {\n            domManager.showCells(elements.boardOne);\n        };\n        domManager.updateTurnBoard(e.detail.activePlayer);\n    });\n\n    eventBus.addEventListener('gridComposed', (e) => {\n        domManager.getGrids([e.detail.gridOne, e.detail.gridTwo]);\n    });\n\n    eventBus.addEventListener('gameOver', (e) => {\n        setTimeout(() => {\n            domManager.renderGameOverDialog(e.detail.winner);\n        }, 300);\n    });\n\n    eventBus.addEventListener('createController', (e) => {\n        const { modality, playerOneName, playerTwoName } = e.detail;\n        createController(modality, playerOneName, playerTwoName);\n    });\n\n    eventBus.addEventListener('restartGame', () => {\n        console.debug('restart event fired.');\n        elements.boardOne.innerHTML = '';\n        elements.boardTwo.innerHTML = '';\n        elements.gameOverDialog.close();\n        domManager.showInitialDialog();\n        domManager.renderBoard(elements.boardOne);\n        domManager.renderBoard(elements.boardTwo);\n        domManager.resetFleetManagers();\n        controller.initialize();\n        elements.randomPlaceOne.removeAttribute('disabled');\n        elements.randomPlaceTwo.removeAttribute('disabled');\n        elements.doneButtonOne.removeAttribute('disabled');\n        elements.doneButtonTwo.removeAttribute('disabled');\n        elements.horizontalOne.removeAttribute('disabled');\n        elements.verticalOne.removeAttribute('disabled');\n\n        if (elements.modality.value === 'computer') {\n            elements.playerTwoName.value = 'Computer';\n        } else {\n            elements.playerTwoName.value = '';\n            elements.playerTwoName.removeAttribute('disabled');\n        };\n    });\n\n    eventBus.addEventListener('controllerCreated', (e) => {\n        domManager.controller = e.detail.controller;\n    });\n\n    eventBus.addEventListener('cellClicked', (e) => {\n        if (e.detail.targetPlayer === 'playerOne' && controller.activePlayer === controller.playerTwo) {\n            controller.attackOnPlayerOne(e.detail.coordinates);\n        } else if (e.detail.targetPlayer === 'playerTwo' && controller.activePlayer === controller.playerOne) {\n            controller.attackOnPlayerTwo(e.detail.coordinates);\n        };\n    });\n\n    eventBus.addEventListener('shipsReadyForPlacement', () => {\n        domManager.placingPhase = true;\n        elements.carrierOne.setAttribute('draggable', true);\n        elements.battleshipOne.setAttribute('draggable', true);\n        elements.cruiserOne.setAttribute('draggable', true);\n        elements.submarineOne.setAttribute('draggable', true);\n        elements.destroyerOne.setAttribute('draggable', true);\n\n        domManager.manageManualPlacing('player-1');\n        domManager.updateTurnBoard(null, controller.playerOne);\n\n        elements.randomPlaceTwo.setAttribute('disabled', true);\n        elements.doneButtonTwo.setAttribute('disabled', true);\n\n        elements.horizontalTwo.setAttribute('disabled', true);\n        elements.verticalTwo.setAttribute('disabled', true);\n    });\n\n    eventBus.addEventListener('placeShip', (e) => {\n        const { ship, coordinates, targetPlayer } = e.detail;\n        \n        const orientation = targetPlayer === 'playerOne' ? domManager.orientationOne : domManager.orientationTwo;\n\n        let shipToPlace;\n\n        if (domManager.placingPlayer === 'playerOne') {\n            switch (ship) {\n                case 'carrier-1':\n                    shipToPlace = controller.playerOne.gameBoard.carrier;\n                    break;\n                case 'battleship-1':\n                    shipToPlace = controller.playerOne.gameBoard.battleship;\n                    break;\n                case 'cruiser-1':\n                    shipToPlace = controller.playerOne.gameBoard.cruiser;\n                    break;\n                case 'submarine-1':\n                    shipToPlace = controller.playerOne.gameBoard.submarine;\n                    break;\n                case 'destroyer-1':\n                    shipToPlace = controller.playerOne.gameBoard.destroyer;\n                    break;\n            };\n        } else if (domManager.placingPlayer === 'playerTwo') {\n            switch (ship) {\n                case 'carrier-2':\n                    shipToPlace = controller.playerTwo.gameBoard.carrier;\n                    break;\n                case 'battleship-2':\n                    shipToPlace = controller.playerTwo.gameBoard.battleship;\n                    break;\n                case 'cruiser-2':\n                    shipToPlace = controller.playerTwo.gameBoard.cruiser;\n                    break;\n                case 'submarine-2':\n                    shipToPlace = controller.playerTwo.gameBoard.submarine;\n                    break;\n                case 'destroyer-2':\n                    shipToPlace = controller.playerTwo.gameBoard.destroyer;\n                    break;\n            };\n            \n        };\n\n        const player = targetPlayer === 'playerOne' ? controller.playerOne : controller.playerTwo;\n        const placingPlayer = domManager.placingPlayer === 'playerOne' ? controller.playerOne : controller.playerTwo;\n\n        if (!shipToPlace.isPlaced) {\n            placingPlayer === player && controller.placingTurn.gameBoard.place(shipToPlace, coordinates, orientation);\n        };\n\n        dispatchGridComposed(controller);\n        \n        if (isModalityHumanVsHuman(controller) && controller.placingTurn === controller.playerTwo) {\n            domManager.showCells(elements.boardTwo);\n            domManager.hideCellsValues(elements.boardOne);\n        } else {\n            domManager.showCells(elements.boardOne);\n            domManager.hideCellsValues(elements.boardTwo);\n        };\n    });\n\n    eventBus.addEventListener('shipPlaced', (e) => {\n        const { ship } = e.detail;\n\n        switch (ship) {\n            case controller.playerOne.gameBoard.carrier:\n               for (let child of elements.carrierOne.children) {\n                child.classList.toggle('miss');\n               };\n               break;\n            case controller.playerOne.gameBoard.battleship:\n               for (let child of elements.battleshipOne.children) {\n                child.classList.toggle('miss');\n               };\n               break;\n            case controller.playerOne.gameBoard.cruiser:\n               for (let child of elements.cruiserOne.children) {\n                child.classList.toggle('miss');\n               };\n               break;\n            case controller.playerOne.gameBoard.submarine:\n               for (let child of elements.submarineOne.children) {\n                child.classList.toggle('miss');\n               };\n               break;\n            case controller.playerOne.gameBoard.destroyer:\n               for (let child of elements.destroyerOne.children) {\n                child.classList.toggle('miss');\n               };\n               break;\n\n            case controller.playerTwo.gameBoard.carrier:\n               for (let child of elements.carrierTwo.children) {\n                child.classList.toggle('miss');\n               };\n               break;\n            case controller.playerTwo.gameBoard.battleship:\n               for (let child of elements.battleshipTwo.children) {\n                child.classList.toggle('miss');\n               };\n               break;\n            case controller.playerTwo.gameBoard.cruiser:\n               for (let child of elements.cruiserTwo.children) {\n                child.classList.toggle('miss');\n               };\n               break;\n            case controller.playerTwo.gameBoard.submarine:\n               for (let child of elements.submarineTwo.children) {\n                child.classList.toggle('miss');\n               };\n               break;\n            case controller.playerTwo.gameBoard.destroyer:\n               for (let child of elements.destroyerTwo.children) {\n                child.classList.toggle('miss');\n               };\n               break;\n        };\n    });\n\n    eventBus.addEventListener('startGame', () => {\n        domManager.updateTurnBoard(controller.activePlayer, null);\n\n        elements.randomPlaceOne.disabled = true;\n        elements.randomPlaceTwo.disabled = true;\n        elements.doneButtonOne.disabled = true;\n        elements.doneButtonTwo.disabled = true;\n\n        const activeBoard = controller.activePlayer === controller.playerOne ? elements.boardOne : elements.boardTwo;\n        const inactiveBoard = controller.activePlayer === controller.playerOne ? elements.boardTwo : elements.boardOne;\n\n        if (isModalityHumanVsHuman(controller)) {\n            domManager.showCells(activeBoard);\n            domManager.hideCellsValues(inactiveBoard);\n        };\n\n        elements.startGameDialog.showModal();\n\n        setTimeout(() => {\n            elements.startGameDialog.close();\n        }, 1500);\n\n        for (let child of elements.carrierOne.children) {\n            child.classList.toggle('miss');\n        };\n        for (let child of elements.battleshipOne.children) {\n            child.classList.toggle('miss');\n        };\n        for (let child of elements.cruiserOne.children) {\n            child.classList.toggle('miss');\n        };\n        for (let child of elements.submarineOne.children) {\n            child.classList.toggle('miss');\n        };\n        for (let child of elements.destroyerOne.children) {\n            child.classList.toggle('miss');\n        };\n\n        for (let child of elements.carrierTwo.children) {\n            child.classList.toggle('miss');\n        };\n        for (let child of elements.battleshipTwo.children) {\n            child.classList.toggle('miss');\n        };\n        for (let child of elements.cruiserTwo.children) {\n            child.classList.toggle('miss');\n        };\n        for (let child of elements.submarineTwo.children) {\n            child.classList.toggle('miss');\n        };\n        for (let child of elements.destroyerTwo.children) {\n            child.classList.toggle('miss');\n        };\n    });\n\n    eventBus.addEventListener('shipSunk', (e) => {\n        const { ship } = e.detail;\n\n        if (controller.activePlayer === controller.playerTwo) {\n            switch (ship.symbol) {\n                case 'A':\n                    domManager.changeShipClass('carrier-1', 'hit');\n                    break;\n                case 'B':\n                    domManager.changeShipClass('battleship-1', 'hit');\n                    break;\n                case 'C':\n                    domManager.changeShipClass('cruiser-1', 'hit');\n                    break;\n                case 'S':\n                    domManager.changeShipClass('submarine-1', 'hit');\n                    break;\n                case 'D':\n                    domManager.changeShipClass('destroyer-1', 'hit');\n                    break;\n            };\n        } else {\n            switch (ship.symbol) {\n                case 'A':\n                    domManager.changeShipClass('carrier-2', 'hit');\n                    break;\n                case 'B':\n                    domManager.changeShipClass('battleship-2', 'hit');\n                    break;\n                case 'C':\n                    domManager.changeShipClass('cruiser-2', 'hit');\n                    break;\n                case 'S':\n                    domManager.changeShipClass('submarine-2', 'hit');\n                    break;\n                case 'D':\n                    domManager.changeShipClass('destroyer-2', 'hit');\n                    break;\n            };\n        };            \n    });\n\n    elements.horizontalOne.addEventListener('click', () => {\n        elements.shipBoardOne.setAttribute('class', 'ships row-orientation');\n        elements.carrierOne.setAttribute('class', 'ship-container container-column');\n        elements.battleshipOne.setAttribute('class', 'ship-container container-column');\n        elements.cruiserOne.setAttribute('class', 'ship-container container-column');\n        elements.submarineOne.setAttribute('class', 'ship-container container-column');\n        elements.destroyerOne.setAttribute('class', 'ship-container container-column');\n\n        domManager.orientationOne = 'vertical';\n    });\n\n    elements.verticalOne.addEventListener('click', () => {\n        elements.shipBoardOne.setAttribute('class', 'ships column-orientation');\n        elements.carrierOne.setAttribute('class', 'ship-container container-row');\n        elements.battleshipOne.setAttribute('class', 'ship-container container-row');\n        elements.cruiserOne.setAttribute('class', 'ship-container container-row');\n        elements.submarineOne.setAttribute('class', 'ship-container container-row');\n        elements.destroyerOne.setAttribute('class', 'ship-container container-row');\n\n        domManager.orientationOne = 'horizontal';\n    });\n\n    elements.horizontalTwo.addEventListener('click', () => {\n        elements.shipBoardTwo.setAttribute('class', 'ships row-orientation');\n        elements.carrierTwo.setAttribute('class', 'ship-container container-column');\n        elements.battleshipTwo.setAttribute('class', 'ship-container container-column');\n        elements.cruiserTwo.setAttribute('class', 'ship-container container-column');\n        elements.submarineTwo.setAttribute('class', 'ship-container container-column');\n        elements.destroyerTwo.setAttribute('class', 'ship-container container-column');\n\n        domManager.orientationTwo = 'vertical';\n    });\n\n    elements.verticalTwo.addEventListener('click', () => {\n        elements.shipBoardTwo.setAttribute('class', 'ships column-orientation');\n        elements.carrierTwo.setAttribute('class', 'ship-container container-row');\n        elements.battleshipTwo.setAttribute('class', 'ship-container container-row');\n        elements.cruiserTwo.setAttribute('class', 'ship-container container-row');\n        elements.submarineTwo.setAttribute('class', 'ship-container container-row');\n        elements.destroyerTwo.setAttribute('class', 'ship-container container-row');\n\n        domManager.orientationTwo = 'horizontal';\n    });\n\n    elements.randomPlaceOne.addEventListener('click', () => {\n        if (!controller.playerOne.gameBoard.allShipsPlaced() && controller.placingTurn === controller.playerOne) controller.composeGameBoard(controller.playerOne);\n    });\n\n    elements.randomPlaceTwo.addEventListener('click', () => {\n        if (!controller.playerTwo.gameBoard.allShipsPlaced() && controller.placingTurn === controller.playerTwo) controller.composeGameBoard(controller.playerTwo);\n    });\n\n    elements.doneButtonOne.addEventListener('click', () => {\n        if (controller.playerOne.gameBoard.allShipsPlaced()) {\n            elements.horizontalOne.setAttribute('disabled', true);\n            elements.verticalOne.setAttribute('disabled', true);\n            elements.randomPlaceOne.setAttribute('disabled', true);\n            elements.doneButtonOne.setAttribute('disabled', true);\n\n            if (isModalityHumanVsHuman(controller)) {\n                elements.randomPlaceTwo.removeAttribute('disabled');\n                elements.doneButtonTwo.removeAttribute('disabled');\n                elements.horizontalTwo.removeAttribute('disabled');\n                elements.verticalTwo.removeAttribute('disabled');\n\n                domManager.manageManualPlacing('player-2');\n                domManager.updateTurnBoard(null, controller.playerTwo);\n                controller.placingTurn = controller.playerTwo;\n            } else {\n                controller.composeGameBoard(controller.playerTwo);\n                controller.startGame();\n            };\n        };     \n    });\n\n    elements.doneButtonTwo.addEventListener('click', () => {\n        if (controller.placingTurn === controller.playerTwo && controller.playerTwo.gameBoard.allShipsPlaced()) {\n            elements.horizontalTwo.setAttribute('disabled', true);\n            elements.verticalTwo.setAttribute('disabled', true);\n            \n            domManager.placingPhase = false;\n\n            elements.carrierTwo.removeAttribute('draggable');\n            elements.battleshipTwo.removeAttribute('draggable');\n            elements.cruiserTwo.removeAttribute('draggable');\n            elements.submarineTwo.removeAttribute('draggable');\n            elements.destroyerTwo.removeAttribute('draggable');\n\n            controller.startGame();\n        }\n    });\n\n    elements.modality.addEventListener('change', (event) => {\n        if (event.target.value === 'computer') {\n            elements.playerTwoName.value = 'Computer';\n            elements.playerTwoName.setAttribute('disabled', true);\n        } else {\n            elements.playerTwoName.value = '';\n            elements.playerTwoName.removeAttribute('disabled');\n        };\n    });\n};\n\n\n","import Player from \"../models/player.js\";\nimport eventBus from \"../utils/eventBus.js\";\nimport isModalityHumanVsHuman from \"../utils/switchModality.js\";\nimport AIController from \"./aiController.js\";\nimport { dispatchGridComposed } from \"./eventListeners.js\";\n\nexport default class GameController {\n    constructor (modality, playerOneName='Player One', playertwoName='Player Two') {\n        this.playerOne = new Player('human', playerOneName);\n        this.playerTwo = new Player(modality, playertwoName);\n        this.aiController = modality === 'computer' ? new AIController(this) : null;\n    };\n\n    #randomizeInitialPlayer() {\n        const random = Math.floor(Math.random() * 2) + 1;\n\n        if (random === 1) {\n            this.activePlayer = this.playerOne;\n        } else {\n            this.activePlayer = this.playerTwo;\n        };\n        console.debug('Initial player randomized');\n    };\n\n    #resetShipsHitsAndPlacement() {\n        for (let ship of this.playerOne.gameBoard.shipArray) {\n            ship.hitsNumber = 0;\n            ship.isPlaced = false;\n        };\n\n        for (let ship of this.playerTwo.gameBoard.shipArray) {\n            ship.hitsNumber = 0;\n            ship.isPlaced = false;\n        };\n        console.debug('ships reset');\n    };\n\n    #checkWinner() {\n        if (this.playerOne.gameBoard.allShipsSunk()) {\n            eventBus.dispatchEvent(new CustomEvent('gameOver', { detail: { winner: this.playerTwo }}));\n        };\n\n        if (this.playerTwo.gameBoard.allShipsSunk()) {\n            eventBus.dispatchEvent(new CustomEvent('gameOver', { detail: { winner: this.playerOne }}));\n        };\n    };\n\n    initialize() {\n        this.#resetShipsHitsAndPlacement();\n        this.playerOne.gameBoard.resetBoard();\n        this.playerTwo.gameBoard.resetBoard();\n\n        dispatchGridComposed(this);\n\n        console.debug('both boards reset');\n        this.placingTurn = this.playerOne;\n        eventBus.dispatchEvent(new Event('shipsReadyForPlacement'));\n    };\n\n    startGame() {\n        this.#randomizeInitialPlayer();\n        eventBus.dispatchEvent(new Event('startGame'));\n        if (!isModalityHumanVsHuman(this) && this.activePlayer === this.playerTwo) {\n            setTimeout(() => {\n                this.aiController.attack();\n            }, 800);\n        };\n        console.debug('start game event fired');\n    };\n\n    switchPlayer() {\n        this.activePlayer = (this.activePlayer === this.playerOne) ? this.playerTwo : this.playerOne;\n        eventBus.dispatchEvent(new CustomEvent('switchPlayer', { detail: { activePlayer: this.activePlayer }}));\n    }\n    \n\n    composeGameBoard(player) {\n        for (let ship of player.gameBoard.shipArray) {\n            while (!ship.isPlaced) {\n                const row = Math.floor(Math.random() * 10);\n                const col = Math.floor(Math.random() * 10);\n                const orientation = (Math.floor(Math.random() * 2) + 1) === 1 ? 'horizontal' : 'vertical'; \n                player.gameBoard.place(ship, [row, col], orientation)\n            };      \n        };\n\n        dispatchGridComposed(this);\n\n        const placingPlayer = player === this.playerOne ? 'playerOne' : 'playerTwo';\n\n        eventBus.dispatchEvent(new CustomEvent('initBoard', { detail: { placingPlayer }}));\n        console.debug('board composed for', player.name);\n    };\n\n    attackOnPlayerTwo(coordinates) {\n        if (this.activePlayer === this.playerOne) {\n            const receiver = 'playerTwo';\n            const { result, coordinates: attackedCoordinates } = this.playerTwo.gameBoard.receiveAttack(coordinates);\n    \n            eventBus.dispatchEvent(new CustomEvent('attackResult', {\n                detail: { receiver, result, coordinates: attackedCoordinates }\n            }));\n    \n            if (result === 'miss') {\n                this.switchPlayer();\n            };\n        };\n        this.#checkWinner(); \n    };\n\n    attackOnPlayerOne(coordinates, path = null) {\n        if (this.activePlayer === this.playerTwo) {\n            const receiver = 'playerOne';\n            const { result, coordinates: attackedCoordinates } = this.playerOne.gameBoard.receiveAttack(coordinates);\n    \n            eventBus.dispatchEvent(new CustomEvent('attackResult', {\n                detail: { receiver, result, coordinates: attackedCoordinates }\n            }));\n    \n            if (result === 'miss') {\n                this.switchPlayer();\n            } else if (!isModalityHumanVsHuman(this) && this.activePlayer === this.playerTwo) {\n                if (result === 'hit') {\n                    setTimeout(() => {\n                        this.aiController.attack();\n                    }, 800);\n                } else if (result === 'alreadyHit') {\n                    this.aiController.attack();\n                };\n            };\n        };        \n        this.#checkWinner();\n    };\n};","export default class ShootNode {\n    constructor (type, coordinates, origin) {\n        this.type = type;\n        this.coordinates = coordinates;\n        this.origin - origin;\n    };\n};","export default class ShootPlot {\n    constructor () {\n        this.originX = null;\n        this.originY = null;\n        this.north = null;\n        this.east = null;\n        this.south = null;\n        this.west = null;\n    };\n\n    getOrigin(origin) {\n        this.originX = origin[1];\n        this.originY = origin[0];\n        this.north = (this.originY - 1 >= 0 && this.originY - 1 < 10) ? [this.originX, this.originY - 1] : null;\n        this.east = (this.originX + 1 >= 0 && this.originX + 1 < 10) ? [this.originX + 1, this.originY]: null;\n        this.south = (this.originY + 1 >= 0 && this.originY + 1 < 10) ? [this.originX, this.originY + 1] : null;\n        this.west = (this.originX - 1 >= 0 && this.originX - 1 < 10) ? [this.originX - 1, this.originY] : null;\n    }\n};","import './styles.css';\nimport { initDOMElements } from './views/DOMElements.js';\nimport DOMManager from './views/DOMManager.js';\nimport setupEventListeners from './controllers/eventListeners.js';\nimport GameController from './controllers/gameController.js';\nimport eventBus from './utils/eventBus.js';\n\nexport let domManager;\nexport let controller;\n\nexport function createController(modality, playerOneName, playerTwoName) {\n    controller = new GameController(modality, playerOneName, playerTwoName);\n    console.debug('controller created');\n    controller.initialize();\n    console.debug('controller initialized');\n    eventBus.dispatchEvent(new CustomEvent('controllerCreated', { detail: { controller }}));\n};\n\nwindow.onload = (event) => {\n    initDOMElements();\n    domManager = new DOMManager();\n    console.debug('domManager created');\n    setupEventListeners(domManager);\n    console.debug('event Listeners set up');\n    domManager.showInitialDialog();\n    domManager.initGame();\n};","import GameBoard from \"../components/gameBoard.js\"\n\nexport default class Player {\n    constructor (type, name) {\n        this.gameBoard = new GameBoard();\n        this.type = type;\n        this.name = name;\n    };\n};","import eventBus from \"../utils/eventBus.js\";\n\nexport default class Ship {\n    constructor (length, symbol) {\n        if (length < 2 || length > 5) {\n            throw new Error('ship length should be between 2 and 5');\n        }\n        this.length = length;\n        this.hitsNumber = 0;\n        this.isPlaced = false;\n        this.symbol = symbol;\n        this.sinkable = true;\n    }\n\n    hit() {\n        this.hitsNumber += 1;\n        this.isSunk();\n    }\n\n    isSunk() {\n        if (this.sinkable) {\n              if (this.hitsNumber >= this.length) {\n            this.sinkable = false;\n            eventBus.dispatchEvent(new CustomEvent('shipSunk', { detail: { ship: this }}));\n            return true;\n        } else {\n            return false;\n        }; \n        }     \n    };\n};\n\n\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","const eventBus = new EventTarget();\nexport default eventBus;","export default function isModalityHumanVsHuman(controller) {\n    return controller.playerTwo.type === 'human' ? true : false;\n};","export let elements = {};\n\nexport function initDOMElements() {\n    console.debug('Inizializing DOMElements');\n    \n    elements = {\n        timeOutDialog: document.querySelector('#timeout-dialog'),\n        yourTurn: document.querySelector('#active-player'),\n        counter: document.querySelector('#counter'),\n        gameOverDialog: document.querySelector('#game-over-dialog'),\n        winnerAnnounce: document.querySelector('#announce-winner'),\n        playAgainButton: document.querySelector('#play-again-button'),\n        turnBoardTitle: document.querySelector('#turn-board h3'),\n        turnBoardActivePlayer: document.querySelector('#turn-board p'),\n        boardOne: document.querySelector('.gameboard-1'),\n        boardTwo: document.querySelector('.gameboard-2'),\n        initialDialog: document.querySelector('#initial-dialog'),\n        selectModality: document.querySelector('#modality'),\n        choosePlayerOneName: document.querySelector('#player-one'),\n        choosePlayerTwoName: document.querySelector('#player-two'),\n        startGameButton: document.querySelector('#start-game-btn'),\n        backgroundImage: document.querySelector('#background-image'),\n        horizontalOne: document.querySelector('#horizontal-1'),\n        verticalOne: document.querySelector('#vertical-1'),\n        horizontalTwo: document.querySelector('#horizontal-2'),\n        verticalTwo: document.querySelector('#vertical-2'),\n        shipBoardOne: document.querySelector('#ships-board-1'),\n        shipBoardTwo: document.querySelector('#ships-board-2'),\n        carrierOne: document.querySelector('#carrier-1'),\n        battleshipOne: document.querySelector('#battleship-1'),\n        cruiserOne: document.querySelector('#cruiser-1'),\n        submarineOne: document.querySelector('#submarine-1'),\n        destroyerOne: document.querySelector('#destroyer-1'),\n        carrierTwo: document.querySelector('#carrier-2'),\n        battleshipTwo: document.querySelector('#battleship-2'),\n        cruiserTwo: document.querySelector('#cruiser-2'),\n        submarineTwo: document.querySelector('#submarine-2'),\n        destroyerTwo: document.querySelector('#destroyer-2'),\n        draggableShips: document.querySelectorAll('.ship-container'),\n        randomPlaceOne: document.querySelector('#place-randomly-btn-1'),\n        randomPlaceTwo: document.querySelector('#place-randomly-btn-2'),\n        doneButtonOne: document.querySelector('#done-btn-1'),\n        doneButtonTwo: document.querySelector('#done-btn-2'),\n        startGameDialog: document.querySelector('#start-game-dialog'),\n        modality: document.querySelector('#modality'),\n        playerTwoName: document.querySelector('#player-two'),\n    };\n};\n","import { elements } from './DOMElements.js';\nimport eventBus from \"../utils/eventBus.js\";\n\nimport battleshipImage from '../assets/images/battleship.webp';\n\nexport default class DOMManager {\n    constructor () {\n        this.gridOne = Array.from({ length: 10 }, () => Array(10).fill(null));\n        this.gridTwo = Array.from({ length: 10 }, () => Array(10).fill(null));\n        this.dragged = null;\n        this.orientationOne = 'vertical';\n        this.orientationTwo = 'vertical';\n        this.placingPhase = false;\n    };\n\n    setBackgroundImage() {\n        elements.backgroundImage.setAttribute('src', battleshipImage);\n    };\n\n    getGrids(grids) {\n        this.gridOne = grids[0];\n        this.gridTwo = grids[1];\n    };\n\n    renderHit(receiver, result, coordinates) {\n        const [row, col] = coordinates;\n        const board = receiver === 'playerOne' ? elements.boardOne : elements.boardTwo;\n        const boardName = board === elements.boardOne ? '.gameboard-1' : '.gameboard-2';\n        const cellX = document.querySelector(`${boardName} .row-${row}`);\n        \n        if (result === 'hit') {\n            cellX.children[col].classList.toggle('hit');\n        } else if (result === 'miss') {\n            cellX.children[col].classList.toggle('miss');\n        };\n    };\n    \n    showInitialDialog() {\n        elements.initialDialog.showModal();\n        elements.playerTwoName.value = 'Computer';\n        elements.playerTwoName.setAttribute('disabled', true);\n    };\n    \n    initGame() {\n        this.setBackgroundImage();\n        elements.startGameButton.addEventListener('click', (e) => {\n            e.preventDefault();\n            const form = elements.initialDialog.querySelector('form');\n\n            if (!form.checkValidity()) {\n                form.reportValidity(); // mostra i messaggi di errore\n                return; // blocca il gioco se i campi non sono validi\n            };\n            this.startGame();\n            elements.initialDialog.close();\n        });\n\n        this.renderBoard(elements.boardOne);\n        this.renderBoard(elements.boardTwo);\n        console.debug('Boards rendered');\n    };\n    \n    startGame() {\n        const modality = elements.selectModality.value;\n        const playerOneName = elements.choosePlayerOneName.value;\n        const playerTwoName = elements.choosePlayerTwoName.value;\n    \n        eventBus.dispatchEvent(new CustomEvent('createController', { detail: { modality, playerOneName, playerTwoName }}));\n    };\n    \n    renderTimeOut(activePlayerName) {\n        elements.timeOutDialog.showModal();\n        elements.yourTurn.innerText = `${activePlayerName} get ready!`;\n        let timeOutCounter = 3;\n        elements.counter.innerText = timeOutCounter;\n        const interval = setInterval(() => {\n            timeOutCounter--;\n            elements.counter.innerText = timeOutCounter;\n            if (timeOutCounter === 0) {\n                clearInterval(interval);\n                setTimeout(() => {\n                    elements.timeOutDialog.close();\n                }, 1000);\n            };\n        }, 1000);\n    };\n    \n    updateTurnBoard(activePlayer, placingTurn = null) {\n        if (activePlayer) {\n            elements.turnBoardTitle.innerText = 'Active Player';\n            elements.turnBoardActivePlayer.innerText = activePlayer.name;\n        } else if (placingTurn) {\n            elements.turnBoardTitle.innerText = 'Place Ships';\n            elements.turnBoardActivePlayer.innerHTML = `<b>${placingTurn.name}</b> drag and drop your ships on the board`;\n        }\n    };\n    \n    managePlayAgainButton() {\n        elements.playAgainButton.addEventListener('click', () => {\n            eventBus.dispatchEvent(new Event('restartGame'));\n        });\n    };\n    \n    renderBoard(DOMBoard) {\n        const targetPlayer = DOMBoard === elements.boardOne ? 'playerOne': 'playerTwo';\n\n        for (let x = 0; x < 10; x++) {\n            const row = document.createElement('div');\n            row.setAttribute('class', `row row-${x}`);\n            \n            for (let y = 0; y < 10; y++) {\n                const col = document.createElement('div');\n                col.setAttribute('class', `col col-${y}`);\n                \n                col.addEventListener('click', () => {\n                    eventBus.dispatchEvent(new CustomEvent('cellClicked', { detail: { targetPlayer, coordinates: [x, y] }}));\n                });\n\n                col.addEventListener('dragover', (event) => {\n                    event.preventDefault();\n                }, false);\n                col.addEventListener('drop', (event) => {\n                    event.preventDefault();\n                    if (this.placingPhase) {\n                        const orientation = targetPlayer === 'playerOne' ? this.orientationOne : this.orientationTwo;\n                        eventBus.dispatchEvent(new CustomEvent('placeShip', { detail: { ship: this.dragged, coordinates: [x, y], targetPlayer, orientation }}, { once: true }));\n                    };      \n                });\n                row.appendChild(col);\n            };\n            DOMBoard.appendChild(row);\n        };\n    };\n    \n    showCells(board) {\n        const gameBoardgrid = board === elements.boardOne ? this.gridOne : this.gridTwo;\n        const domBoardName = board === elements.boardOne ? 'gameboard-1' : 'gameboard-2';\n    \n        gameBoardgrid.forEach((gameBoardRow, rowIndex) => {\n            const domRow = document.querySelector(`.${domBoardName} .row-${rowIndex}`);\n            const domRowCells = Array.from(domRow.children);\n    \n            gameBoardRow.forEach((gameBoardCell, colIndex) => {\n                gameBoardgrid[rowIndex][colIndex] !== null && domRowCells[colIndex].classList.add('ship');\n            });\n        });\n    };\n\n    hideCellsValues(board) {\n        const gameBoardgrid = board === elements.boardOne ? this.gridOne : this.gridTwo;\n        const domBoardName = board === elements.boardOne ? 'gameboard-1' : 'gameboard-2';\n    \n        gameBoardgrid.forEach((gameBoardRow, rowIndex) => {\n            const domRow = document.querySelector(`.${domBoardName} .row-${rowIndex}`);\n            const domRowCells = Array.from(domRow.children);\n    \n            gameBoardRow.forEach((gameBoardCell, colIndex) => {\n                domRowCells[colIndex].classList.remove('ship');\n            });\n        });\n    };\n    \n    renderGameOverDialog(winner) {\n        elements.winnerAnnounce.innerText = `${winner.name} won!!!`;\n        elements.gameOverDialog.showModal();\n        this.managePlayAgainButton();\n    };\n\n    manageManualPlacing(player) {\n        if (player === 'player-1') {\n            this.placingPlayer = 'playerOne';\n            this.showCells(elements.boardOne);\n            this.hideCellsValues(elements.boardTwo);\n\n            elements.carrierOne.addEventListener('dragstart', () => {\n                this.dragged = 'carrier-1';\n            });\n            elements.carrierOne.addEventListener('dragend', () => {\n                this.dragged = null;\n            });\n\n            elements.battleshipOne.addEventListener('dragstart', () => {\n                this.dragged = 'battleship-1';\n            });\n            elements.battleshipOne.addEventListener('dragend', () => {\n                this.dragged = null;\n            });\n\n            elements.cruiserOne.addEventListener('dragstart', () => {\n                this.dragged = 'cruiser-1';\n            });\n            elements.cruiserOne.addEventListener('dragend', () => {\n                this.dragged = null;\n            });\n\n            elements.submarineOne.addEventListener('dragstart', () => {\n                this.dragged = 'submarine-1';\n            });\n            elements.submarineOne.addEventListener('dragend', () => {\n                this.dragged = null;\n            });\n\n            elements.destroyerOne.addEventListener('dragstart', () => {\n                this.dragged = 'destroyer-1';\n            });\n            elements.destroyerOne.addEventListener('dragend', () => {\n                this.dragged = null;\n            }); \n\n        } else if (player === 'player-2') {\n            this.placingPlayer = 'playerTwo';\n            this.showCells(elements.boardTwo);\n            this.hideCellsValues(elements.boardOne);\n\n            elements.carrierOne.setAttribute('draggable', false);\n            elements.battleshipOne.setAttribute('draggable', false);\n            elements.cruiserOne.setAttribute('draggable', false);\n            elements.submarineOne.setAttribute('draggable', false);\n            elements.destroyerOne.setAttribute('draggable', false);\n\n            elements.carrierTwo.setAttribute('draggable', true);\n            elements.battleshipTwo.setAttribute('draggable', true);\n            elements.cruiserTwo.setAttribute('draggable', true);\n            elements.submarineTwo.setAttribute('draggable', true);\n            elements.destroyerTwo.setAttribute('draggable', true);\n\n\n            elements.carrierTwo.addEventListener('dragstart', () => {\n                this.dragged = 'carrier-2';\n            });\n            elements.carrierTwo.addEventListener('dragend', () => {\n                this.dragged = null;\n            });\n\n            elements.battleshipTwo.addEventListener('dragstart', () => {\n                this.dragged = 'battleship-2';\n            });\n            elements.battleshipTwo.addEventListener('dragend', () => {\n                this.dragged = null;\n            });\n\n            elements.cruiserTwo.addEventListener('dragstart', () => {\n                this.dragged = 'cruiser-2';\n            });\n            elements.cruiserTwo.addEventListener('dragend', () => {\n                this.dragged = null;\n            });\n\n            elements.submarineTwo.addEventListener('dragstart', () => {\n                this.dragged = 'submarine-2';\n            });\n            elements.submarineTwo.addEventListener('dragend', () => {\n                this.dragged = null;\n            });\n\n            elements.destroyerTwo.addEventListener('dragstart', () => {\n                this.dragged = 'destroyer-2';\n            });\n            elements.destroyerTwo.addEventListener('dragend', () => {\n                this.dragged = null;\n            }); \n        }\n    };\n\n    resetFleetManagers() {\n        for (let child of elements.carrierOne.children) {\n            child.classList.remove('hit');\n        };\n        for (let child of elements.battleshipOne.children) {\n            child.classList.remove('hit');\n        };\n        for (let child of elements.cruiserOne.children) {\n            child.classList.remove('hit');\n        };\n        for (let child of elements.submarineOne.children) {\n            child.classList.remove('hit');\n        };\n        for (let child of elements.destroyerOne.children) {\n            child.classList.remove('hit');\n        };\n\n        for (let child of elements.carrierTwo.children) {\n            child.classList.remove('hit');\n        };\n        for (let child of elements.battleshipTwo.children) {\n            child.classList.remove('hit');\n        };\n        for (let child of elements.cruiserTwo.children) {\n            child.classList.remove('hit');\n        };\n        for (let child of elements.submarineTwo.children) {\n            child.classList.remove('hit');\n        };\n        for (let child of elements.destroyerTwo.children) {\n            child.classList.remove('hit');\n        };\n    }\n\n    changeShipClass(ship, selectedClass) {\n        switch (ship) {\n            case 'carrier-1':\n                for (let child of elements.carrierOne.children) {\n                    child.classList.toggle(`${selectedClass}`);\n                };\n                break;\n            case 'battleship-1':\n                for (let child of elements.battleshipOne.children) {\n                    child.classList.toggle(`${selectedClass}`);\n                };\n                break;\n            case 'cruiser-1':\n                for (let child of elements.cruiserOne.children) {\n                    child.classList.toggle(`${selectedClass}`);\n                };\n                break;\n            case 'submarine-1':\n                for (let child of elements.submarineOne.children) {\n                    child.classList.toggle(`${selectedClass}`);\n                };\n                break;\n            case 'destroyer-1':\n                for (let child of elements.destroyerOne.children) {\n                    child.classList.toggle(`${selectedClass}`);\n                };\n                break;\n            case 'carrier-2':\n                for (let child of elements.carrierTwo.children) {\n                    child.classList.toggle(`${selectedClass}`);\n                };\n                break;\n            case 'battleship-2':\n                for (let child of elements.battleshipTwo.children) {\n                    child.classList.toggle(`${selectedClass}`);\n                };\n                break;\n            case 'cruiser-2':\n                for (let child of elements.cruiserTwo.children) {\n                    child.classList.toggle(`${selectedClass}`);\n                };\n                break;\n            case 'submarine-2':\n                for (let child of elements.submarineTwo.children) {\n                    child.classList.toggle(`${selectedClass}`);\n                };\n                break;\n            case 'destroyer-2':\n                for (let child of elements.destroyerTwo.children) {\n                    child.classList.toggle(`${selectedClass}`);\n                };\n                break;\n        };\n    };\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n",""],"names":[],"sourceRoot":""}